@model EvalEngine.UI.Models.ReportChart

<div style="width: 100%; height: 190px; display: inline-block;">
    <div id="chart@(Model.Rank.ToString())@(Model.Type.ToString())_overall" class="@(Model.Type.ToString())_overall" style="float: left; background: #ffffff; display: inline-block; border: 1px solid #D4DADE; padding: 5px;">
        <p style="color: #F2790C; font-weight: 600;">Overall Proficiency:</p>
        <script type="text/javascript">
            var chartName = "#chart" + "@Model.Rank.ToString()" + "@Model.Type.ToString()" + "_overall";
            var svg = dimple.newSvg(chartName, 290, 150);
            var data = data = [
                { "Label": "Treatment", "Value": @Model.ChartData_Proficiency_Intervention },
                { "Label": "Control", "Value": @Model.ChartData_Proficiency_Control }
            ];
            var chart = new dimple.chart(svg, data);
            chart.setBounds(30, 20, 200, 105);

            var x = chart.addCategoryAxis("x", "Label");
            var y = chart.addMeasureAxis("y", "Value");
            var s = chart.addSeries(["Value", "Label"], dimple.plot.bar);


            y.hidden = true;
            x.showGridlines = false;
            x.addOrderRule("Label", true);
            s.barGap = .5;

            s.addEventHandler("mouseover", onHover);

            s.addEventHandler("mouseleave", onLeave);

            chart.addLegend(500, 100, 100, 100, "right", s);

            chart.assignColor("Control","#325D87");
            chart.assignColor("Treatment","#E8750C");

            chart.draw();

            x.titleShape.remove();
            //x2.titleShape.remove();

            //x.shapes.selectAll("text").attr('style', 'font-size:13px;font-family: "Gill Sans MT", Calibri, sans-serif;color:#555;').attr('fill', '#555');
            s.shapes.each(function(d) {

                // Get the shape as a d3 selection
                var shape = d3.select(this);
                // Get the height and width from the scales
                var height = chart.y + chart.height - y._scale(d.height);
                var width = parseFloat(shape.attr("width"));

                var posx = parseFloat(shape.attr("x")) + width / 2;
                var posy = parseFloat(shape.attr("y")) + 20;
                var textcolor = "white";
                if (height < 55) {
                    posy = parseFloat(shape.attr("y")) - 10;
                    textcolor = "black";

                }

                var textvalue = d.yValue;

                textvalue = d.yValue + "%";


                // Add a text label for the value
                svg.append("text")

                    // Position in the centre of the shape (vertical position is
                    // manually set due to cross-browser problems with baseline)
                    .attr("x", posx)
                    .attr("y", posy)
                    //.attr("y", parseFloat(shape.attr("y")) - height / 2)

                    // Centre align
                    .style("text-anchor", "middle")
                    .style("font-size", width / 3 + "px")
                    .style("font-family", "\"Gill Sans\", \"Gill Sans MT\", Calibri, sans-serif;")
                    .style("fill", textcolor)

                    // Format the number
                    .text(textvalue);

            });

            // Event to handle mouse enter
            function onHover(e) {

            };

            // Event to handle mouse exit
            function onLeave(e) {
            };
        </script>
    </div>

</div>